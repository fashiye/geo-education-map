{"ast":null,"code":"import axios from 'axios';\nconst AMAP_API_KEY = '46eaf29c2fb11c5c66f7583d7f451995'; // 替换为你的高德API Key\nconst AMAP_BASE_URL = 'https://restapi.amap.com/v3';\n\n/**\n * 获取省份信息（含下属城市）\n */\nexport const getProvinceInfo = async provinceName => {\n  try {\n    const response = await axios.get(`${AMAP_BASE_URL}/district`, {\n      params: {\n        key: AMAP_API_KEY,\n        keywords: provinceName,\n        subdistrict: 1,\n        extensions: 'all'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching province info:', error);\n    throw error;\n  }\n};\n\n/**\n * 获取城市信息\n */\nexport const getCityInfo = async cityName => {\n  try {\n    const response = await axios.get(`${AMAP_BASE_URL}/district`, {\n      params: {\n        key: AMAP_API_KEY,\n        keywords: cityName,\n        subdistrict: 0,\n        extensions: 'all'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching city info:', error);\n    throw error;\n  }\n};\n\n/**\n * 获取指定位置周边地标数据\n */\nexport const getMapData = async location => {\n  try {\n    const response = await axios.get(`${AMAP_BASE_URL}/place/around`, {\n      params: {\n        key: AMAP_API_KEY,\n        location: location,\n        radius: 1000,\n        types: '地标'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching map data:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","AMAP_API_KEY","AMAP_BASE_URL","getProvinceInfo","provinceName","response","get","params","key","keywords","subdistrict","extensions","data","error","console","getCityInfo","cityName","getMapData","location","radius","types"],"sources":["C:/Users/Fashi/Desktop/sb/map/map/geo-education-map/src/api/amap.ts"],"sourcesContent":["import axios from 'axios';\n\nconst AMAP_API_KEY = '46eaf29c2fb11c5c66f7583d7f451995'; // 替换为你的高德API Key\nconst AMAP_BASE_URL = 'https://restapi.amap.com/v3';\n\n/**\n * 获取省份信息（含下属城市）\n */\nexport const getProvinceInfo = async (provinceName: string) => {\n    try {\n        const response = await axios.get(`${AMAP_BASE_URL}/district`, {\n            params: {\n                key: AMAP_API_KEY,\n                keywords: provinceName,\n                subdistrict: 1,\n                extensions: 'all'\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching province info:', error);\n        throw error;\n    }\n};\n\n/**\n * 获取城市信息\n */\nexport const getCityInfo = async (cityName: string) => {\n    try {\n        const response = await axios.get(`${AMAP_BASE_URL}/district`, {\n            params: {\n                key: AMAP_API_KEY,\n                keywords: cityName,\n                subdistrict: 0,\n                extensions: 'all'\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching city info:', error);\n        throw error;\n    }\n};\n\n/**\n * 获取指定位置周边地标数据\n */\nexport const getMapData = async (location: string) => {\n    try {\n        const response = await axios.get(`${AMAP_BASE_URL}/place/around`, {\n            params: {\n                key: AMAP_API_KEY,\n                location: location,\n                radius: 1000,\n                types: '地标'\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching map data:', error);\n        throw error;\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,kCAAkC,CAAC,CAAC;AACzD,MAAMC,aAAa,GAAG,6BAA6B;;AAEnD;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,YAAoB,IAAK;EAC3D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGJ,aAAa,WAAW,EAAE;MAC1DK,MAAM,EAAE;QACJC,GAAG,EAAEP,YAAY;QACjBQ,QAAQ,EAAEL,YAAY;QACtBM,WAAW,EAAE,CAAC;QACdC,UAAU,EAAE;MAChB;IACJ,CAAC,CAAC;IACF,OAAON,QAAQ,CAACO,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAME,WAAW,GAAG,MAAOC,QAAgB,IAAK;EACnD,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGJ,aAAa,WAAW,EAAE;MAC1DK,MAAM,EAAE;QACJC,GAAG,EAAEP,YAAY;QACjBQ,QAAQ,EAAEO,QAAQ;QAClBN,WAAW,EAAE,CAAC;QACdC,UAAU,EAAE;MAChB;IACJ,CAAC,CAAC;IACF,OAAON,QAAQ,CAACO,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMI,UAAU,GAAG,MAAOC,QAAgB,IAAK;EAClD,IAAI;IACA,MAAMb,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGJ,aAAa,eAAe,EAAE;MAC9DK,MAAM,EAAE;QACJC,GAAG,EAAEP,YAAY;QACjBiB,QAAQ,EAAEA,QAAQ;QAClBC,MAAM,EAAE,IAAI;QACZC,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;IACF,OAAOf,QAAQ,CAACO,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}