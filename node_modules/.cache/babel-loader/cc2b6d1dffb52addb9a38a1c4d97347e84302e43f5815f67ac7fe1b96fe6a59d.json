{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fashi\\\\Desktop\\\\sb\\\\map\\\\map\\\\geo-education-map\\\\src\\\\components\\\\MapView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getProvinceInfo, getCityInfo } from '../api/amap';\nimport { getGeoDescription } from '../api/deepseek';\nimport './MapView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = ({\n  selectedProvince,\n  selectedCity,\n  onProvinceClick,\n  onCityClick,\n  fetchCityInfo\n}) => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [provinceInfo, setProvinceInfo] = useState('');\n  const [cityInfo, setCityInfo] = useState('');\n  const [cities, setCities] = useState([]);\n  useEffect(() => {\n    const initMap = () => {\n      // @ts-ignore\n      const mapInstance = new window.AMap.Map('mapContainer', {\n        zoom: 5,\n        center: [123.4294, 41.7968] // 辽宁省中心坐标\n      });\n      setMap(mapInstance);\n    };\n    if (window.AMap) {\n      initMap();\n    } else {\n      // 动态加载高德地图JSAPI\n      const script = document.createElement('script');\n      script.src = `https://webapi.amap.com/maps?v=1.4.15&key=46eaf29c2fb11c5c66f7583d7f451995`;\n      script.onload = initMap;\n      document.body.appendChild(script);\n    }\n  }, []);\n  const handleProvinceClick = async provinceName => {\n    var _data$districts, _data$districts$, _data$districts2, _data$districts2$;\n    const data = await getProvinceInfo(provinceName);\n    setProvinceInfo(((_data$districts = data.districts) === null || _data$districts === void 0 ? void 0 : (_data$districts$ = _data$districts[0]) === null || _data$districts$ === void 0 ? void 0 : _data$districts$.introduction) || '');\n    setCities(((_data$districts2 = data.districts) === null || _data$districts2 === void 0 ? void 0 : (_data$districts2$ = _data$districts2[0]) === null || _data$districts2$ === void 0 ? void 0 : _data$districts2$.districts) || []);\n    zoomToProvince(provinceName);\n  };\n  const handleCityClick = async cityName => {\n    var _data$districts3, _data$districts3$;\n    const data = await getCityInfo(cityName);\n    setCityInfo(((_data$districts3 = data.districts) === null || _data$districts3 === void 0 ? void 0 : (_data$districts3$ = _data$districts3[0]) === null || _data$districts3$ === void 0 ? void 0 : _data$districts3$.introduction) || '');\n    zoomToCity(cityName);\n  };\n  const zoomToProvince = provinceName => {\n    if (!map) return;\n    map.setZoom(6);\n    map.setCenter([123.4294, 41.7968]);\n    highlightCities(cities);\n  };\n  const zoomToCity = cityName => {\n    if (!map) return;\n    const city = cities.find(c => c.name === cityName);\n    if (city && city.center) {\n      map.setZoom(8);\n      map.setCenter(city.center);\n    }\n  };\n  const highlightCities = cities => {\n    // 高亮显示各个市的逻辑\n    cities.forEach(city => {\n      // 逻辑来高亮城市\n    });\n  };\n  const handleMapClick = async () => {\n    const result = await getGeoDescription(cityInfo, {});\n    // 处理生成的地理介绍文本\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mapContainer\",\n    onClick: handleMapClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"province-info\",\n      children: provinceInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-info\",\n      children: cityInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(MapView, \"BHUAtefHBkqBA7tG8+fqoHfzbOw=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useState","getProvinceInfo","getCityInfo","getGeoDescription","jsxDEV","_jsxDEV","MapView","selectedProvince","selectedCity","onProvinceClick","onCityClick","fetchCityInfo","_s","map","setMap","provinceInfo","setProvinceInfo","cityInfo","setCityInfo","cities","setCities","initMap","mapInstance","window","AMap","Map","zoom","center","script","document","createElement","src","onload","body","appendChild","handleProvinceClick","provinceName","_data$districts","_data$districts$","_data$districts2","_data$districts2$","data","districts","introduction","zoomToProvince","handleCityClick","cityName","_data$districts3","_data$districts3$","zoomToCity","setZoom","setCenter","highlightCities","city","find","c","name","forEach","handleMapClick","result","id","onClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Fashi/Desktop/sb/map/map/geo-education-map/src/components/MapView.tsx"],"sourcesContent":["interface Window {\n  AMap: any;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { getProvinceInfo, getCityInfo } from '../api/amap';\nimport { getGeoDescription } from '../api/deepseek';\nimport { Province, City } from '../types';\nimport './MapView.css';\n\ninterface MapViewProps {\n    selectedProvince: Province | null;\n    selectedCity: City | null;\n    onProvinceClick: (province: Province) => void;\n    onCityClick: (city: City) => void;\n    fetchCityInfo: (cityName: string) => Promise<void>;\n}\n\nconst MapView: React.FC<MapViewProps> = ({\n    selectedProvince,\n    selectedCity,\n    onProvinceClick,\n    onCityClick,\n    fetchCityInfo\n}) => {\n    const [map, setMap] = useState<any>(null);\n    const [provinceInfo, setProvinceInfo] = useState('');\n    const [cityInfo, setCityInfo] = useState('');\n    const [cities, setCities] = useState<City[]>([]);\n\n    useEffect(() => {\n        const initMap = () => {\n            // @ts-ignore\n            const mapInstance = new window.AMap.Map('mapContainer', {\n                zoom: 5,\n                center: [123.4294, 41.7968], // 辽宁省中心坐标\n            });\n            setMap(mapInstance);\n        };\n\n        if ((window as any).AMap) {\n            initMap();\n        } else {\n            // 动态加载高德地图JSAPI\n            const script = document.createElement('script');\n            script.src = `https://webapi.amap.com/maps?v=1.4.15&key=46eaf29c2fb11c5c66f7583d7f451995`;\n            script.onload = initMap;\n            document.body.appendChild(script);\n        }\n    }, []);\n\n    const handleProvinceClick = async (provinceName: string) => {\n        const data = await getProvinceInfo(provinceName) as any;\n        setProvinceInfo(data.districts?.[0]?.introduction || '');\n        setCities(data.districts?.[0]?.districts || []);\n        zoomToProvince(provinceName);\n    };\n\n    const handleCityClick = async (cityName: string) => {\n        const data = await getCityInfo(cityName) as any;\n        setCityInfo(data.districts?.[0]?.introduction || '');\n        zoomToCity(cityName);\n    };\n\n    const zoomToProvince = (provinceName: string) => {\n        if (!map) return;\n        map.setZoom(6);\n        map.setCenter([123.4294, 41.7968]);\n        highlightCities(cities);\n    };\n\n    const zoomToCity = (cityName: string) => {\n        if (!map) return;\n        const city = cities.find(c => c.name === cityName);\n        if (city && city.center) {\n            map.setZoom(8);\n            map.setCenter(city.center);\n        }\n    };\n\n    const highlightCities = (cities: City[]) => {\n        // 高亮显示各个市的逻辑\n        cities.forEach(city => {\n            // 逻辑来高亮城市\n        });\n    };\n\n    const handleMapClick = async () => {\n        const result = await getGeoDescription(cityInfo, {});\n        // 处理生成的地理介绍文本\n    };\n\n    return (\n        <div id=\"mapContainer\" onClick={handleMapClick}>\n            <div className=\"province-info\">{provinceInfo}</div>\n            <div className=\"city-info\">{cityInfo}</div>\n        </div>\n    );\n};\n\nexport default MapView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}